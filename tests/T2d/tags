FIPC_attach_seg	FreeIPC.f90	/^     Function FIPC_attach_seg( shmid, flag ) Bind(/
FIPC_crit_end	FreeIPC.f90	/^     Function FIPC_crit_end( semid ) Bind( C )$/
FIPC_crit_start	FreeIPC.f90	/^     Function FIPC_crit_start( semid ) Bind( C )$/
FIPC_critical_end	FreeIPC.f90	/^  Subroutine FIPC_critical_end( ctxt, error )$/
FIPC_critical_start	FreeIPC.f90	/^  Subroutine FIPC_critical_start( ctxt, error )$/
FIPC_ctxt_dup	FreeIPC.f90	/^  Subroutine FIPC_ctxt_dup( ctxt_1, ctxt_2, error /
FIPC_ctxt_extra_comm	FreeIPC.f90	/^  Subroutine FIPC_ctxt_extra_comm( ctxt, comm, err/
FIPC_ctxt_free	FreeIPC.f90	/^  Subroutine FIPC_ctxt_free( ctxt, error )$/
FIPC_ctxt_intra_comm	FreeIPC.f90	/^  Subroutine FIPC_ctxt_intra_comm( ctxt, comm, err/
FIPC_ctxt_split	FreeIPC.f90	/^  Subroutine FIPC_ctxt_split( ctxt_1, colour, key,/
FIPC_ctxt_world_comm	FreeIPC.f90	/^  Subroutine FIPC_ctxt_world_comm( ctxt, comm, err/
FIPC_detach_seg	FreeIPC.f90	/^     Function FIPC_detach_seg( shmaddr ) Bind( C )/
FIPC_finalize	FreeIPC.f90	/^  Subroutine FIPC_finalize( error )$/
FIPC_get_errval	FreeIPC.f90	/^     Subroutine FIPC_get_errval( EACCES, EEXIST, E/
FIPC_get_seg	FreeIPC.f90	/^     Function FIPC_get_seg( size, create, exclusiv/
FIPC_get_sem	FreeIPC.f90	/^     Function FIPC_get_sem( create, exclusive, per/
FIPC_init	FreeIPC.f90	/^  Subroutine FIPC_init( universe_comm, error )$/
FIPC_initialized	FreeIPC.f90	/^  Subroutine FIPC_initialized( flag, error )$/
FIPC_inquire_seg	FreeIPC.f90	/^     Function FIPC_inquire_seg( shmid, n, shm_data/
FIPC_node_barrier	FreeIPC.f90	/^  Subroutine FIPC_node_barrier( ctxt, error )$/
FIPC_remove_seg	FreeIPC.f90	/^     Function FIPC_remove_seg( shmid ) Bind( C )$/
FIPC_remove_sem	FreeIPC.f90	/^     Function FIPC_remove_sem( semid ) Bind( C )$/
FIPC_sizeof_c_complex	FreeIPC.f90	/^     Function FIPC_sizeof_c_complex() Bind( C )$/
FIPC_sizeof_c_double	FreeIPC.f90	/^     Function FIPC_sizeof_c_double() Bind( C )$/
FIPC_sizeof_c_int	FreeIPC.f90	/^     Function FIPC_sizeof_c_int() Bind( C )$/
FIPC_sizeof_c_long	FreeIPC.f90	/^     Function FIPC_sizeof_c_long() Bind( C )$/
MAPSET_SMPSHM	decomp_2d.f90	/^  SUBROUTINE MAPSET_SMPSHM(C, KTBL, NARY, decomp)$/
SPCFFT	glassman.f90	/^  SUBROUTINE SPCFFT(U,N,ISIGN,WORK)$/
SPCPFT	glassman.f90	/^  SUBROUTINE SPCPFT( A, B, C, UIN, UOUT, ISIGN )$/
STATISTIC	visu.f90	/^subroutine STATISTIC(ux1,uy1,uz1,phi1,ta1,umean,vm/
VISU_INSTA	visu.f90	/^subroutine VISU_INSTA (ux1,uy1,uz1,rho1,phi1,ta1,t/
VISU_INSTB	visu.f90	/^subroutine VISU_INSTB (ux1,uy1,uz1,phi1,ta1,tb1,tc/
VISU_PRE	visu.f90	/^subroutine VISU_PRE (pp3,ta1,tb1,di1,ta2,tb2,di2,&/
abxyz	poisson.f90	/^  subroutine abxyz(ax,ay,az,bx,by,bz,nx,ny,nz,bcx,/
alloc_x_complex	alloc.f90	/^  subroutine alloc_x_complex(var, opt_decomp, opt_/
alloc_x_real	alloc.f90	/^  subroutine alloc_x_real(var, opt_decomp, opt_glo/
alloc_y_complex	alloc.f90	/^  subroutine alloc_y_complex(var, opt_decomp, opt_/
alloc_y_real	alloc.f90	/^  subroutine alloc_y_real(var, opt_decomp, opt_glo/
alloc_z_complex	alloc.f90	/^  subroutine alloc_z_complex(var, opt_decomp, opt_/
alloc_z_real	alloc.f90	/^  subroutine alloc_z_real(var, opt_decomp, opt_glo/
best_2d_grid	decomp_2d.f90	/^  subroutine best_2d_grid(iproc, best_p_row, best_/
body	navier.f90	/^subroutine body(ux,uy,uz,ep1)$/
c2c_1m_x	fft_fftw3.f90	/^  subroutine c2c_1m_x(inout, isign, plan1)$/
c2c_1m_x	fft_generic.f90	/^  subroutine c2c_1m_x(inout, isign, decomp)$/
c2c_1m_x_plan	fft_fftw3.f90	/^  subroutine c2c_1m_x_plan(plan1, decomp, isign)$/
c2c_1m_y	fft_fftw3.f90	/^  subroutine c2c_1m_y(inout, isign, plan1)$/
c2c_1m_y	fft_generic.f90	/^  subroutine c2c_1m_y(inout, isign, decomp)$/
c2c_1m_y_plan	fft_fftw3.f90	/^  subroutine c2c_1m_y_plan(plan1, decomp, isign)$/
c2c_1m_z	fft_fftw3.f90	/^  subroutine c2c_1m_z(inout, isign, plan1)$/
c2c_1m_z	fft_generic.f90	/^  subroutine c2c_1m_z(inout, isign, decomp)$/
c2c_1m_z_plan	fft_fftw3.f90	/^  subroutine c2c_1m_z_plan(plan1, decomp, isign)$/
c2r_1m_x	fft_fftw3.f90	/^  subroutine c2r_1m_x(input, output)$/
c2r_1m_x	fft_generic.f90	/^  subroutine c2r_1m_x(input, output)$/
c2r_1m_x_plan	fft_fftw3.f90	/^  subroutine c2r_1m_x_plan(plan1, decomp_sp, decom/
c2r_1m_z	fft_fftw3.f90	/^  subroutine c2r_1m_z(input, output)$/
c2r_1m_z	fft_generic.f90	/^  subroutine c2r_1m_z(input, output)$/
c2r_1m_z_plan	fft_fftw3.f90	/^  subroutine c2r_1m_z_plan(plan1, decomp_sp, decom/
channel	tools.f90	/^subroutine channel (ux)$/
coefficients	filter.f90	/^subroutine coefficients $/
collect_data	tools.f90	/^subroutine collect_data()$/
convdiff	convdiff.f90	/^subroutine convdiff(ux1,uy1,uz1,rho1,ta1,tb1,tc1,t/
corgp	navier.f90	/^subroutine corgp (ux,gx,uy,uz,px,py,pz)$/
corgp_IBM	navier.f90	/^subroutine corgp_IBM (ux,uy,uz,px,py,pz,nlock)$/
ctxt_create	FreeIPC.f90	/^  Subroutine ctxt_create( world_comm, intra_comm, /
ctxt_free	FreeIPC.f90	/^  Subroutine ctxt_free( ctxt, error )$/
cyclix	filter.f90	/^subroutine cyclix(fiffx,fifx,ficx,fibx,fibbx,filax/
cycliy	filter.f90	/^subroutine cycliy(fiffy,fify,ficy,fiby,fibby,filay/
cycliz	filter.f90	/^subroutine cycliz(fiffz,fifz,ficz,fibz,fibbz,filaz/
deci6	derive.f90	/^subroutine deci6(tx,ux,rx,sx,cfi6,csi6,cwi6,cfx6,c/
deciy6	derive.f90	/^subroutine deciy6(ty,uy,ry,sy,cfi6y,csi6y,cwi6y,cf/
deciz6	derive.f90	/^subroutine deciz6(tz,uz,rz,sz,cfiz6,csiz6,cwiz6,cf/
decomp_2d_abort	decomp_2d.f90	/^  subroutine decomp_2d_abort(errorcode, msg)$/
decomp_2d_fft_finalize	fft_common.f90	/^  subroutine decomp_2d_fft_finalize$/
decomp_2d_fft_get_size	fft_common.f90	/^  subroutine decomp_2d_fft_get_size(istart, iend, /
decomp_2d_finalize	decomp_2d.f90	/^  subroutine decomp_2d_finalize$/
decomp_2d_init	decomp_2d.f90	/^  subroutine decomp_2d_init(nx,ny,nz,p_row,p_col,p/
decomp_2d_poisson_finalize	poisson.f90	/^  subroutine decomp_2d_poisson_finalize$/
decomp_2d_poisson_init	poisson.f90	/^  subroutine decomp_2d_poisson_init(bcx1, bcy1, bc/
decomp_info_finalize	decomp_2d.f90	/^  subroutine decomp_info_finalize(decomp)$/
decomp_info_init	decomp_2d.f90	/^  subroutine decomp_info_init(nx,ny,nz,decomp)$/
decomp_info_init_shm	decomp_2d.f90	/^  subroutine decomp_info_init_shm(decomp)$/
decx6	derive.f90	/^subroutine decx6(tx,ux,rx,sx,cfx6,csx6,cwx6,nx,nxm/
decy6	derive.f90	/^subroutine decy6(ty,uy,ry,sy,cfy6,csy6,cwy6,ppyi,n/
decz6	derive.f90	/^subroutine decz6(tz,uz,rz,sz,cfz6,csz6,cwz6,nx,ny,/
density	convdiff.f90	/^SUBROUTINE density(ux1, uy1, uz1, rho1, rhos1, rho/
derx	derive.f90	/^subroutine derx(tx,ux,rx,sx,ffx,fsx,fwx,nx,ny,nz,n/
derxx	derive.f90	/^subroutine derxx(tx,ux,rx,sx,sfx,ssx,swx,nx,ny,nz,/
dery	derive.f90	/^subroutine dery(ty,uy,ry,sy,ffy,fsy,fwy,ppy,nx,ny,/
deryy	derive.f90	/^subroutine deryy(ty,uy,ry,sy,sfy,ssy,swy,nx,ny,nz,/
derz	derive.f90	/^subroutine derz(tz,uz,rz,sz,ffz,fsz,fwz,nx,ny,nz,n/
derzz	derive.f90	/^subroutine derzz(tz,uz,rz,sz,sfz,ssz,swz,nx,ny,nz,/
distribute	decomp_2d.f90	/^  subroutine distribute(data1,proc,st,en,sz)$/
divergence	navier.f90	/^subroutine divergence (ux1,uy1,uz1,ep1,ta1,tb1,tc1/
ecoule	navier.f90	/^subroutine ecoule(ux1,uy1,uz1)$/
eval_error	tools.f90	/^SUBROUTINE eval_error(sol_num, sol_exact, name)$/
eval_error_rho	tools.f90	/^SUBROUTINE eval_error_rho(rho_num)$/
fft_3d_c2c	fft_common_3d.f90	/^  subroutine fft_3d_c2c(in, out, isign)$/
fft_3d_c2c	fft_fftw3.f90	/^  subroutine fft_3d_c2c(in, out, isign)$/
fft_3d_c2r	fft_common_3d.f90	/^  subroutine fft_3d_c2r(in_c, out_r)$/
fft_3d_c2r	fft_fftw3.f90	/^  subroutine fft_3d_c2r(in_c, out_r)$/
fft_3d_r2c	fft_common_3d.f90	/^  subroutine fft_3d_r2c(in_r, out_c)$/
fft_3d_r2c	fft_fftw3.f90	/^  subroutine fft_3d_r2c(in_r, out_c)$/
fft_init_arg	fft_common.f90	/^  subroutine fft_init_arg(pencil)     ! allow to h/
fft_init_general	fft_common.f90	/^  subroutine fft_init_general(pencil, nx, ny, nz)$/
fft_init_noarg	fft_common.f90	/^  subroutine fft_init_noarg$/
filter	filter.f90	/^subroutine filter() $/
filx	filter.f90	/^subroutine filx(tx,ux,rx,sx,vx,fiffx,fifx,ficx,fib/
fily	filter.f90	/^subroutine fily(ty,uy,ry,sy,vy,fiffy,fify,ficy,fib/
filz	filter.f90	/^subroutine filz(tz,uz,rz,sz,vz,fiffz,fifz,ficz,fib/
finalize_fft_engine	fft_fftw3.f90	/^  subroutine finalize_fft_engine$/
finalize_fft_engine	fft_generic.f90	/^  subroutine finalize_fft_engine$/
findfactor	factor.f90	/^  subroutine findfactor(num, factors, nfact)$/
fine_to_coarseP	decomp_2d.f90	/^  subroutine fine_to_coarseP(ipencil,var_fine,var_/
fine_to_coarseS	decomp_2d.f90	/^  subroutine fine_to_coarseS(ipencil,var_fine,var_/
fine_to_coarseV	decomp_2d.f90	/^  subroutine fine_to_coarseV(ipencil,var_fine,var_/
generate_base_comms	FreeIPC.f90	/^  Subroutine generate_base_comms( universe_comm, w/
generate_base_extra_comm	FreeIPC.f90	/^    Subroutine generate_base_extra_comm( world_com/
generate_base_intra_comm	FreeIPC.f90	/^    Subroutine generate_base_intra_comm( world_com/
generate_base_world_comm	FreeIPC.f90	/^    Subroutine generate_base_world_comm( universe_/
get_decomp_info	decomp_2d.f90	/^  subroutine get_decomp_info(decomp)$/
get_dist	decomp_2d.f90	/^  subroutine get_dist(nx,ny,nz,decomp)$/
get_new_seg	FreeIPC.f90	/^  Subroutine get_new_seg( n, shmid )$/
get_new_sem	FreeIPC.f90	/^  Subroutine get_new_sem( semid )$/
get_smp_map	decomp_2d.f90	/^  subroutine get_smp_map(comm, nnodes, my_node, nc/
glassman_3d_r2c	glassman.f90	/^  subroutine glassman_3d_r2c(in_r,nx,ny,nz,out_c)$/
gradp	navier.f90	/^subroutine gradp(ta1,tb1,tc1,di1,td2,tf2,ta2,tb2,t/
inflow	navier.f90	/^subroutine inflow (ux,uy,uz,phi)$/
init	navier.f90	/^subroutine init (ux1,uy1,uz1,rho1,rhos1,rhoss1,ep1/
init_coarser_mesh_statP	decomp_2d.f90	/^  subroutine init_coarser_mesh_statP(i_skip,j_skip/
init_coarser_mesh_statS	decomp_2d.f90	/^  subroutine init_coarser_mesh_statS(i_skip,j_skip/
init_coarser_mesh_statV	decomp_2d.f90	/^  subroutine init_coarser_mesh_statV(i_skip,j_skip/
init_fft_engine	fft_fftw3.f90	/^  subroutine init_fft_engine$/
init_fft_engine	fft_generic.f90	/^  subroutine init_fft_engine$/
init_neighbour	halo.f90	/^  subroutine init_neighbour$/
init_variables	variables.f90	/^  subroutine init_variables$/
inter6	derive.f90	/^subroutine inter6(tx,ux,rx,sx,cifx6,cisx6,ciwx6,nx/
interi6	derive.f90	/^subroutine interi6(tx,ux,rx,sx,cifi6,cisi6,ciwi6,c/
interiy6	derive.f90	/^subroutine interiy6(ty,uy,ry,sy,cifi6y,cisi6y,ciwi/
interiz6	derive.f90	/^subroutine interiz6(tz,uz,rz,sz,cifiz6,cisiz6,ciwi/
intery6	derive.f90	/^subroutine intery6(ty,uy,ry,sy,cify6,cisy6,ciwy6,n/
interz6	derive.f90	/^subroutine interz6(tz,uz,rz,sz,cifz6,cisz6,ciwz6,n/
intt	navier.f90	/^subroutine  intt (ux,uy,uz,gx,gy,gz,hx,hy,hz,ta1,t/
inversion5_v1	tools.f90	/^subroutine inversion5_v1(aaa,eee,spI)$/
inversion5_v2	tools.f90	/^subroutine inversion5_v2(aaa,eee,spI)$/
matrice_refinement	poisson.f90	/^subroutine matrice_refinement()$/
mem_merge_xy_complex	transpose_x_to_y.f90	/^  subroutine mem_merge_xy_complex(in,n1,n2,n3,out,/
mem_merge_xy_real	transpose_x_to_y.f90	/^  subroutine mem_merge_xy_real(in,n1,n2,n3,out,ipr/
mem_merge_yx_complex	transpose_y_to_x.f90	/^  subroutine mem_merge_yx_complex(in,n1,n2,n3,out,/
mem_merge_yx_real	transpose_y_to_x.f90	/^  subroutine mem_merge_yx_real(in,n1,n2,n3,out,ipr/
mem_merge_yz_complex	transpose_y_to_z.f90	/^  subroutine mem_merge_yz_complex(in,n1,n2,n3,out,/
mem_merge_yz_real	transpose_y_to_z.f90	/^  subroutine mem_merge_yz_real(in,n1,n2,n3,out,ipr/
mem_merge_zy_complex	transpose_z_to_y.f90	/^  subroutine mem_merge_zy_complex(in,n1,n2,n3,out,/
mem_merge_zy_real	transpose_z_to_y.f90	/^  subroutine mem_merge_zy_real(in,n1,n2,n3,out,ipr/
mem_split_xy_complex	transpose_x_to_y.f90	/^  subroutine mem_split_xy_complex(in,n1,n2,n3,out,/
mem_split_xy_real	transpose_x_to_y.f90	/^  subroutine mem_split_xy_real(in,n1,n2,n3,out,ipr/
mem_split_yx_complex	transpose_y_to_x.f90	/^  subroutine mem_split_yx_complex(in,n1,n2,n3,out,/
mem_split_yx_real	transpose_y_to_x.f90	/^  subroutine mem_split_yx_real(in,n1,n2,n3,out,ipr/
mem_split_yz_complex	transpose_y_to_z.f90	/^  subroutine mem_split_yz_complex(in,n1,n2,n3,out,/
mem_split_yz_real	transpose_y_to_z.f90	/^  subroutine mem_split_yz_real(in,n1,n2,n3,out,ipr/
mem_split_zy_complex	transpose_z_to_y.f90	/^  subroutine mem_split_zy_complex(in,n1,n2,n3,out,/
mem_split_zy_real	transpose_z_to_y.f90	/^  subroutine mem_split_zy_real(in,n1,n2,n3,out,ipr/
mpiio_write_real_coarse	io.f90	/^  subroutine mpiio_write_real_coarse(ipencil,var,f/
outflow	navier.f90	/^subroutine outflow (ux,uy,uz,phi)$/
parameter	parameters.f90	/^subroutine parameter()$/
partition	decomp_2d.f90	/^  subroutine partition(nx, ny, nz, pdim, lstart, l/
poisson	poisson.f90	/^  subroutine poisson(rhs, bcx, bcy, bcz)$/
poisson_000	poisson.f90	/^  subroutine poisson_000(rhs)$/
poisson_010	poisson.f90	/^  subroutine poisson_010(rhs)$/
poisson_100	poisson.f90	/^  subroutine poisson_100(rhs)$/
poisson_11x	poisson.f90	/^  subroutine poisson_11x(rhs, nclz1)$/
pre_correc	navier.f90	/^subroutine pre_correc(ux,uy,uz)$/
prepare	schemes.f90	/^subroutine prepare (b,c,f,s,w,n)$/
prepare_buffer	decomp_2d.f90	/^  subroutine prepare_buffer(decomp)$/
prepare_filtre	filter.f90	/^subroutine prepare_filtre(aff,af,a,ab,abb,al,n) $/
prepare_shared_buffer	decomp_2d.f90	/^  subroutine prepare_shared_buffer(C,MPI_COMM,deco/
primefactors	factor.f90	/^  subroutine primefactors(num, factors, nfact)$/
print_seg_list	FreeIPC.f90	/^  Subroutine print_seg_list( ctxt )$/
print_smp_info	decomp_2d.f90	/^  subroutine print_smp_info(s)$/
r2c_1m_x	fft_fftw3.f90	/^  subroutine r2c_1m_x(input, output)$/
r2c_1m_x	fft_generic.f90	/^  subroutine r2c_1m_x(input, output)$/
r2c_1m_x_plan	fft_fftw3.f90	/^  subroutine r2c_1m_x_plan(plan1, decomp_ph, decom/
r2c_1m_z	fft_fftw3.f90	/^  subroutine r2c_1m_z(input, output)$/
r2c_1m_z	fft_generic.f90	/^  subroutine r2c_1m_z(input, output)$/
r2c_1m_z_plan	fft_fftw3.f90	/^  subroutine r2c_1m_z_plan(plan1, decomp_ph, decom/
read_one_complex	io.f90	/^  subroutine read_one_complex(ipencil,var,filename/
read_one_real	io.f90	/^  subroutine read_one_real(ipencil,var,filename,op/
read_scalar_complex	io.f90	/^  subroutine read_scalar_complex(fh,disp,n,var)$/
read_scalar_integer	io.f90	/^  subroutine read_scalar_integer(fh,disp,n,var)$/
read_scalar_logical	io.f90	/^  subroutine read_scalar_logical(fh,disp,n,var)$/
read_scalar_real	io.f90	/^  subroutine read_scalar_real(fh,disp,n,var)$/
read_var_complex	io.f90	/^  subroutine read_var_complex(fh,disp,ipencil,var,/
read_var_real	io.f90	/^  subroutine read_var_real(fh,disp,ipencil,var,opt/
restart	tools.f90	/^subroutine restart(ux1,uy1,uz1,ep1,pp3,phi1,gx1,gy/
scalar	convdiff.f90	/^subroutine scalar(ux1,uy1,uz1,phi1,phis1,phiss1,di/
schemes	schemes.f90	/^subroutine schemes()$/
seg_create_complex_1d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_1d_size_in_int( ct/
seg_create_complex_2d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_2d_size_in_int( ct/
seg_create_complex_3d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_3d_size_in_int( ct/
seg_create_complex_4d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_4d_size_in_int( ct/
seg_create_complex_5d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_5d_size_in_int( ct/
seg_create_complex_6d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_6d_size_in_int( ct/
seg_create_complex_7d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_complex_7d_size_in_int( ct/
seg_create_double_1d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_1d_size_in_int( ctx/
seg_create_double_2d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_2d_size_in_int( ctx/
seg_create_double_3d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_3d_size_in_int( ctx/
seg_create_double_4d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_4d_size_in_int( ctx/
seg_create_double_5d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_5d_size_in_int( ctx/
seg_create_double_6d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_6d_size_in_int( ctx/
seg_create_double_7d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_double_7d_size_in_int( ctx/
seg_create_integer_1d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_1d_size_in_int( ct/
seg_create_integer_2d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_2d_size_in_int( ct/
seg_create_integer_3d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_3d_size_in_int( ct/
seg_create_integer_4d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_4d_size_in_int( ct/
seg_create_integer_5d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_5d_size_in_int( ct/
seg_create_integer_6d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_6d_size_in_int( ct/
seg_create_integer_7d_size_in_int	FreeIPC.f90	/^  Subroutine seg_create_integer_7d_size_in_int( ct/
seg_free_complex_1d	FreeIPC.f90	/^  Subroutine seg_free_complex_1d( a, error )$/
seg_free_complex_2d	FreeIPC.f90	/^  Subroutine seg_free_complex_2d( a, error )$/
seg_free_complex_3d	FreeIPC.f90	/^  Subroutine seg_free_complex_3d( a, error )$/
seg_free_complex_4d	FreeIPC.f90	/^  Subroutine seg_free_complex_4d( a, error )$/
seg_free_complex_5d	FreeIPC.f90	/^  Subroutine seg_free_complex_5d( a, error )$/
seg_free_complex_6d	FreeIPC.f90	/^  Subroutine seg_free_complex_6d( a, error )$/
seg_free_complex_7d	FreeIPC.f90	/^  Subroutine seg_free_complex_7d( a, error )$/
seg_free_double_1d	FreeIPC.f90	/^  Subroutine seg_free_double_1d( a, error )$/
seg_free_double_2d	FreeIPC.f90	/^  Subroutine seg_free_double_2d( a, error )$/
seg_free_double_3d	FreeIPC.f90	/^  Subroutine seg_free_double_3d( a, error )$/
seg_free_double_4d	FreeIPC.f90	/^  Subroutine seg_free_double_4d( a, error )$/
seg_free_double_5d	FreeIPC.f90	/^  Subroutine seg_free_double_5d( a, error )$/
seg_free_double_6d	FreeIPC.f90	/^  Subroutine seg_free_double_6d( a, error )$/
seg_free_double_7d	FreeIPC.f90	/^  Subroutine seg_free_double_7d( a, error )$/
seg_free_integer_1d	FreeIPC.f90	/^  Subroutine seg_free_integer_1d( a, error )$/
seg_free_integer_2d	FreeIPC.f90	/^  Subroutine seg_free_integer_2d( a, error )$/
seg_free_integer_3d	FreeIPC.f90	/^  Subroutine seg_free_integer_3d( a, error )$/
seg_free_integer_4d	FreeIPC.f90	/^  Subroutine seg_free_integer_4d( a, error )$/
seg_free_integer_5d	FreeIPC.f90	/^  Subroutine seg_free_integer_5d( a, error )$/
seg_free_integer_6d	FreeIPC.f90	/^  Subroutine seg_free_integer_6d( a, error )$/
seg_free_integer_7d	FreeIPC.f90	/^  Subroutine seg_free_integer_7d( a, error )$/
segment_create	FreeIPC.f90	/^  Subroutine segment_create( what, rank, sizes, ct/
segment_free	FreeIPC.f90	/^  Subroutine segment_free( shmid, error )$/
semaphore_create	FreeIPC.f90	/^  Subroutine semaphore_create( ctxt, semid, error /
semaphore_free	FreeIPC.f90	/^  Subroutine semaphore_free( semid, error )$/
set_comm	FreeIPC.f90	/^    Subroutine set_comm( handle, comm, error )$/
sizeof_what	FreeIPC.f90	/^  Function sizeof_what( what ) Result( r )$/
stretching	tools.f90	/^subroutine stretching()$/
test_density_min_max	tools.f90	/^subroutine test_density_min_max(rho)$/
test_eq_comm	FreeIPC.f90	/^  Function test_eq_comm( a, b )$/
test_eq_ctxt	FreeIPC.f90	/^  Function test_eq_ctxt( a, b )$/
test_min_max	test_min_max.f90	/^    subroutine test_min_max(name,text,array_tmp,i_/
test_min_max_comp	test_min_max.f90	/^    subroutine test_min_max_comp(name,text,array_t/
test_ne_comm	FreeIPC.f90	/^  Function test_ne_comm( a, b )$/
test_ne_ctxt	FreeIPC.f90	/^  Function test_ne_ctxt( a, b )$/
test_scalar_min_max	tools.f90	/^subroutine test_scalar_min_max(phi)$/
test_speed_min_max	tools.f90	/^subroutine test_speed_min_max(ux,uy,uz)$/
transpose_test	decomp_2d.f90	/^  subroutine transpose_test(handle)$/
transpose_x_to_y_complex	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_complex(src, dst, op/
transpose_x_to_y_complex_start	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_complex_start(handle/
transpose_x_to_y_complex_wait	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_complex_wait(handle,/
transpose_x_to_y_real	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_real(src, dst, opt_d/
transpose_x_to_y_real_start	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_real_start(handle, s/
transpose_x_to_y_real_wait	transpose_x_to_y.f90	/^  subroutine transpose_x_to_y_real_wait(handle, sr/
transpose_y_to_x_complex	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_complex(src, dst, op/
transpose_y_to_x_complex_start	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_complex_start(handle/
transpose_y_to_x_complex_wait	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_complex_wait(handle,/
transpose_y_to_x_real	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_real(src, dst, opt_d/
transpose_y_to_x_real_start	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_real_start(handle, s/
transpose_y_to_x_real_wait	transpose_y_to_x.f90	/^  subroutine transpose_y_to_x_real_wait(handle, sr/
transpose_y_to_z_complex	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_complex(src, dst, op/
transpose_y_to_z_complex_start	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_complex_start(handle/
transpose_y_to_z_complex_wait	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_complex_wait(handle,/
transpose_y_to_z_real	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_real(src, dst, opt_d/
transpose_y_to_z_real_start	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_real_start(handle, s/
transpose_y_to_z_real_wait	transpose_y_to_z.f90	/^  subroutine transpose_y_to_z_real_wait(handle, sr/
transpose_z_to_y_complex	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_complex(src, dst, op/
transpose_z_to_y_complex_start	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_complex_start(handle/
transpose_z_to_y_complex_wait	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_complex_wait(handle,/
transpose_z_to_y_real	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_real(src, dst, opt_d/
transpose_z_to_y_real_start	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_real_start(handle, s/
transpose_z_to_y_real_wait	transpose_z_to_y.f90	/^  subroutine transpose_z_to_y_real_wait(handle, sr/
update_halo_complex	halo.f90	/^  subroutine update_halo_complex(in, out, level, o/
update_halo_real	halo.f90	/^  subroutine update_halo_real(in, out, level, opt_/
waves	poisson.f90	/^subroutine waves ()$/
waves	spectral.f90	/^subroutine waves ()$/
write_base_info	FreeIPC.f90	/^    Subroutine write_base_info( intra_comm, extra_/
write_every_complex	io.f90	/^  subroutine write_every_complex(ipencil,var,iskip/
write_every_real	io.f90	/^  subroutine write_every_real(ipencil,var,iskip,js/
write_one_complex	io.f90	/^  subroutine write_one_complex(ipencil,var,filenam/
write_one_real	io.f90	/^  subroutine write_one_real(ipencil,var,filename,o/
write_plane_3d_complex	io.f90	/^  subroutine write_plane_3d_complex(ipencil,var,ip/
write_plane_3d_real	io.f90	/^  subroutine write_plane_3d_real(ipencil,var,iplan/
write_scalar_complex	io.f90	/^  subroutine write_scalar_complex(fh,disp,n,var)$/
write_scalar_integer	io.f90	/^  subroutine write_scalar_integer(fh,disp,n,var)$/
write_scalar_logical	io.f90	/^  subroutine write_scalar_logical(fh,disp,n,var)$/
write_scalar_real	io.f90	/^  subroutine write_scalar_real(fh,disp,n,var)$/
write_subdomain	io.f90	/^  subroutine write_subdomain(ipencil,var,is,ie,js,/
write_var_complex	io.f90	/^  subroutine write_var_complex(fh,disp,ipencil,var/
write_var_real	io.f90	/^  subroutine write_var_real(fh,disp,ipencil,var,op/
